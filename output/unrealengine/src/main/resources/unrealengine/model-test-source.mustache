{{>licenseInfo}}
{{#models}}{{#model}}

{{#defaultInclude}}#include "{{{defaultInclude}}}"{{/defaultInclude}}
#include "{{classname}}Test.h"
#include "JsonSerializer.h"

{{#modelNamespaceDeclarations}}
namespace {{this}}
{
{{/modelNamespaceDeclarations}}

	using namespace Utils;

	{{classname}}Test::{{classname}}Test()
	{}

	{{classname}}Test::~{{classname}}Test()
	{}

	{{classname}} {{classname}}Test::Example()
	{
		{{classname}} ret;
		JsonSerializer serializer;

		{{#vars}}
		{{#isNotContainer}}
		{{#example}}
		{
			FString exampleValue = "{{{example}}}";
			if (!serializer.TryGetJsonValue(MakeShared<FJsonValueString>(exampleValue), ret.{{name}}))
			{
				LogReadExampleError(TEXT("{{name}}"), exampleValue);
			}
		}
		{{/example}}
		{{/isNotContainer}}
		{{/vars}}
		return ret;
	}
{{#modelNamespaceDeclarations}}
}
{{/modelNamespaceDeclarations}}

{{/model}}
{{/models}}
