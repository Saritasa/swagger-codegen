{{>licenseInfo}}
{{#models}}{{#model}}
#pragma once

{{#defaultInclude}}#include "{{{defaultInclude}}}"{{/defaultInclude}}
#include "{{#apiModelsPath}}{{{apiModelsPath}}}{{/apiModelsPath}}{{classname}}.h"
#include "{{#jsonUtilsPath}}{{{jsonUtilsPath}}}{{/jsonUtilsPath}}JsonTestUtils.h"

namespace Utils
{
	template<bool RewriteFlag>
	struct Example<{{#modelNamespaceDeclarations}}{{this}}::{{/modelNamespaceDeclarations}}{{classname}}, RewriteFlag>
	{
		static {{#modelNamespaceDeclarations}}{{this}}::{{/modelNamespaceDeclarations}}{{classname}} Get(Utils::JsonSerializer& Serializer)
		{
			{{#modelNamespaceDeclarations}}{{this}}::{{/modelNamespaceDeclarations}}{{classname}} ret;
			{{#vars}}
			{{#isNotContainer}}
			{{#example}}
			JsonTestUtils::FillFieldWithExampleValue(Serializer, TEXT("{{{example}}}"), TEXT("{{name}}"), ret.{{name}});
			{{/example}}
			{{^example}}
			JsonTestUtils::FillFieldWithExampleValue(Serializer, TEXT("{{name}}"), ret.{{name}});
			{{/example}}
			{{/isNotContainer}}
			{{/vars}}
			return ret;
		}
	};
}

{{/model}}
{{/models}}
